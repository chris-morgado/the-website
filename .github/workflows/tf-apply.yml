name: Terraform Apply & Deploy Next.js

on:
  push:
    branches: [ main ]

concurrency:
  group: terraform-prod
  cancel-in-progress: false

jobs:
  apply-and-deploy:
    runs-on: ubuntu-latest

    env:
      TF_IN_AUTOMATION: "true"
      TF_INPUT: "false"
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_domain_root: ${{ secrets.TF_DOMAIN_ROOT }}
      TF_VAR_domain_www: ${{ secrets.TF_DOMAIN_WWW }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.TF_CLOUDFLARE_ZONE_ID }}
      TF_VAR_bucket_name: ${{ secrets.TF_BUCKET_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve

      - name: Capture Terraform outputs
        run: |
          echo "S3_BUCKET=$(terraform output -raw bucket_name)" >> $GITHUB_ENV
          echo "CF_DISTRIBUTION_ID=$(terraform output -raw cloudfront_id)" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: next/package-lock.json

      - name: Install deps
        working-directory: next
        run: npm ci

      - name: Build static export
        working-directory: next
        run: npm run build:static   

      - name: Sync HTML (no-store)
        run: |
          aws s3 sync ./next/out s3://$S3_BUCKET/ \
            --delete \
            --exclude "*" \
            --include "*.html" \
            --include "*.txt" \
            --include "robots.txt" \
            --include "sitemap*.xml" \
            --cache-control "no-store"

      - name: Sync static (long cache)
        run: |
          aws s3 sync ./next/out s3://$S3_BUCKET/ \
            --delete \
            --exclude "*.html" \
            --exclude "*.txt" \
            --exclude "robots.txt" \
            --exclude "sitemap*.xml" \
            --cache-control "public,max-age=31536000,immutable"